{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:28:36\n\n  25 }\n  26 \n  27 async getByEmailOrPhoneNumber(email: string, phone_number: string) {\n→ 28     return await this.Prospect.findUnique({\n           where: {\n             OR: [\n             ~~\n               {\n                 email: 'emeka@gmail.com'\n               },\n               {\n                 phone_number: '080679230968'\n               }\n             ]\n           }\n         })\n\nUnknown arg `OR` in where.OR for type ProspectWhereUniqueInput. Did you mean `id`? Available args:\ntype ProspectWhereUniqueInput {\n  id?: Int\n  email?: String\n  phone_number?: String\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:28:36\n\n  25 }\n  26 \n  27 async getByEmailOrPhoneNumber(email: string, phone_number: string) {\n→ 28     return await this.Prospect.findUnique({\n           where: {\n             OR: [\n             ~~\n               {\n                 email: 'emeka@gmail.com'\n               },\n               {\n                 phone_number: '080679230968'\n               }\n             ]\n           }\n         })\n\nUnknown arg `OR` in where.OR for type ProspectWhereUniqueInput. Did you mean `id`? Available args:\ntype ProspectWhereUniqueInput {\n  id?: Int\n  email?: String\n  phone_number?: String\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"Cannot read properties of null (reading 'name')"}
{"level":"error","message":"Cannot read properties of null (reading 'name')"}
