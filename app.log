{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload) {\n→ 10     return await this.Prospect.create(\nUnique constraint failed on the constraint: `prospects_email_key`"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:16:36\n\n  13 }\n  14 \n  15 async getByEmail(email: string) {\n→ 16     return await this.Prospect.findUnique({\n           0: \"e\",\n           1: \"m\",\n           2: \"a\",\n           3: \"i\",\n           4: \"l\",\n         + where: {\n         +   id: Int,\n         +   email: String,\n         +   phone_number: String\n         + }\n         })\n\nArgument `where` is missing."}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:28:36\n\n  25 }\n  26 \n  27 async getByEmailOrPhoneNumber(email: string, phone_number: string) {\n→ 28     return await this.Prospect.findUnique({\n           where: {\n             OR: [\n             ~~\n               {\n                 email: 'emeka@gmail.com'\n               },\n               {\n                 phone_number: '080679230968'\n               }\n             ]\n           }\n         })\n\nUnknown arg `OR` in where.OR for type ProspectWhereUniqueInput. Did you mean `id`? Available args:\ntype ProspectWhereUniqueInput {\n  id?: Int\n  email?: String\n  phone_number?: String\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:28:36\n\n  25 }\n  26 \n  27 async getByEmailOrPhoneNumber(email: string, phone_number: string) {\n→ 28     return await this.Prospect.findUnique({\n           where: {\n             OR: [\n             ~~\n               {\n                 email: 'emeka@gmail.com'\n               },\n               {\n                 phone_number: '080679230968'\n               }\n             ]\n           }\n         })\n\nUnknown arg `OR` in where.OR for type ProspectWhereUniqueInput. Did you mean `id`? Available args:\ntype ProspectWhereUniqueInput {\n  id?: Int\n  email?: String\n  phone_number?: String\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"\nInvalid `this.Prospect.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:20:36\n\n  17 }\n  18 \n  19 async getById(id: number) {\n→ 20     return await this.Prospect.findUnique({\n           where: {\n             id: NaN\n                 ~~~\n           }\n         })\n\nArgument id: Got invalid value NaN on prisma.findUniqueProspect. Provided Float, expected Int.\n\n"}
{"level":"error","message":"Cannot read properties of null (reading 'name')"}
{"level":"error","message":"Cannot read properties of null (reading 'name')"}
{"level":"error","message":"Route not Found"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             address: '15 lans Street Jabi Abuja',\n             ~~~~~~~\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n         +   department: {\n         +     create?: DepartmentCreateWithoutEmployeesInput | DepartmentUncheckedCreateWithoutEmployeesInput,\n         +     connectOrCreate?: DepartmentCreateOrConnectWithoutEmployeesInput,\n         +     connect?: DepartmentWhereUniqueInput\n         +   },\n         ?   prospects?: {\n         ?     create?: EmployeeProspectCreateWithoutEmployeeInput | EmployeeProspectCreateWithoutEmployeeInput | EmployeeProspectUncheckedCreateWithoutEmployeeInput | EmployeeProspectUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: EmployeeProspectCreateOrConnectWithoutEmployeeInput | EmployeeProspectCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: EmployeeProspectCreateManyEmployeeInputEnvelope,\n         ?     connect?: EmployeeProspectWhereUniqueInput | EmployeeProspectWhereUniqueInput\n         ?   },\n         ?   customers?: {\n         ?     create?: EmployeeCustomerCreateWithoutEmployeeInput | EmployeeCustomerCreateWithoutEmployeeInput | EmployeeCustomerUncheckedCreateWithoutEmployeeInput | EmployeeCustomerUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: EmployeeCustomerCreateOrConnectWithoutEmployeeInput | EmployeeCustomerCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: EmployeeCustomerCreateManyEmployeeInputEnvelope,\n         ?     connect?: EmployeeCustomerWhereUniqueInput | EmployeeCustomerWhereUniqueInput\n         ?   },\n         ?   prospect_interactions?: {\n         ?     create?: ProspectInteractionCreateWithoutEmployeeInput | ProspectInteractionCreateWithoutEmployeeInput | ProspectInteractionUncheckedCreateWithoutEmployeeInput | ProspectInteractionUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: ProspectInteractionCreateOrConnectWithoutEmployeeInput | ProspectInteractionCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: ProspectInteractionCreateManyEmployeeInputEnvelope,\n         ?     connect?: ProspectInteractionWhereUniqueInput | ProspectInteractionWhereUniqueInput\n         ?   },\n         ?   customer_interactions?: {\n         ?     create?: CustomerInteractionCreateWithoutEmployeeInput | CustomerInteractionCreateWithoutEmployeeInput | CustomerInteractionUncheckedCreateWithoutEmployeeInput | CustomerInteractionUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: CustomerInteractionCreateOrConnectWithoutEmployeeInput | CustomerInteractionCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: CustomerInteractionCreateManyEmployeeInputEnvelope,\n         ?     connect?: CustomerInteractionWhereUniqueInput | CustomerInteractionWhereUniqueInput\n         ?   }\n           }\n         })\n\nUnknown arg `address` in data.address for type EmployeeCreateInput. Did you mean `name`?\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeCreateInput. Did you mean `password`?\nArgument department for data.department is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             address: '15 lans Street Jabi Abuja',\n             ~~~~~~~\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n         +   department: {\n         +     create?: DepartmentCreateWithoutEmployeesInput | DepartmentUncheckedCreateWithoutEmployeesInput,\n         +     connectOrCreate?: DepartmentCreateOrConnectWithoutEmployeesInput,\n         +     connect?: DepartmentWhereUniqueInput\n         +   },\n         ?   prospects?: {\n         ?     create?: EmployeeProspectCreateWithoutEmployeeInput | EmployeeProspectCreateWithoutEmployeeInput | EmployeeProspectUncheckedCreateWithoutEmployeeInput | EmployeeProspectUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: EmployeeProspectCreateOrConnectWithoutEmployeeInput | EmployeeProspectCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: EmployeeProspectCreateManyEmployeeInputEnvelope,\n         ?     connect?: EmployeeProspectWhereUniqueInput | EmployeeProspectWhereUniqueInput\n         ?   },\n         ?   customers?: {\n         ?     create?: EmployeeCustomerCreateWithoutEmployeeInput | EmployeeCustomerCreateWithoutEmployeeInput | EmployeeCustomerUncheckedCreateWithoutEmployeeInput | EmployeeCustomerUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: EmployeeCustomerCreateOrConnectWithoutEmployeeInput | EmployeeCustomerCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: EmployeeCustomerCreateManyEmployeeInputEnvelope,\n         ?     connect?: EmployeeCustomerWhereUniqueInput | EmployeeCustomerWhereUniqueInput\n         ?   },\n         ?   prospect_interactions?: {\n         ?     create?: ProspectInteractionCreateWithoutEmployeeInput | ProspectInteractionCreateWithoutEmployeeInput | ProspectInteractionUncheckedCreateWithoutEmployeeInput | ProspectInteractionUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: ProspectInteractionCreateOrConnectWithoutEmployeeInput | ProspectInteractionCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: ProspectInteractionCreateManyEmployeeInputEnvelope,\n         ?     connect?: ProspectInteractionWhereUniqueInput | ProspectInteractionWhereUniqueInput\n         ?   },\n         ?   customer_interactions?: {\n         ?     create?: CustomerInteractionCreateWithoutEmployeeInput | CustomerInteractionCreateWithoutEmployeeInput | CustomerInteractionUncheckedCreateWithoutEmployeeInput | CustomerInteractionUncheckedCreateWithoutEmployeeInput,\n         ?     connectOrCreate?: CustomerInteractionCreateOrConnectWithoutEmployeeInput | CustomerInteractionCreateOrConnectWithoutEmployeeInput,\n         ?     createMany?: CustomerInteractionCreateManyEmployeeInputEnvelope,\n         ?     connect?: CustomerInteractionWhereUniqueInput | CustomerInteractionWhereUniqueInput\n         ?   }\n           }\n         })\n\nUnknown arg `address` in data.address for type EmployeeCreateInput. Did you mean `name`?\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeCreateInput. Did you mean `password`?\nArgument department for data.department is missing.\n\nNote: Lines with + are required, lines with ? are optional.\n"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             address: '15 lans Street Jabi Abuja',\n             ~~~~~~~\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n             department_id: 1\n           }\n         })\n\nUnknown arg `address` in data.address for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             address: '15 lans Street Jabi Abuja',\n             ~~~~~~~\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n             department_id: 1\n           }\n         })\n\nUnknown arg `address` in data.address for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n             department_id: 1\n           }\n         })\n\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\n\n"}
{"level":"error","message":"\nInvalid `this.Employee.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:10:36\n\n   7 Employee = prisma.employee;\n   8 \n   9 async save(data: SaveEmployeePayload) {\n→ 10     return await this.Employee.create({\n           data: {\n             name: 'Akachukwu Aneke',\n             email: 'aka@gmail.com',\n             phone_number: '07039775298',\n             password: 'Akalo_88',\n             confirm_password: 'Akalo_88',\n             ~~~~~~~~~~~~~~~~\n             department_id: 1\n           }\n         })\n\nUnknown arg `confirm_password` in data.confirm_password for type EmployeeUncheckedCreateInput. Available args:\n\ntype EmployeeUncheckedCreateInput {\n  id?: Int\n  name: String\n  email: String\n  phone_number: String\n  password: String\n  department_id: Int\n  prospects?: EmployeeProspectUncheckedCreateNestedManyWithoutEmployeeInput\n  customers?: EmployeeCustomerUncheckedCreateNestedManyWithoutEmployeeInput\n  prospect_interactions?: ProspectInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n  customer_interactions?: CustomerInteractionUncheckedCreateNestedManyWithoutEmployeeInput\n}\n\n"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Object'\n    --- property 'proxy' closes the circle"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Object'\n    --- property 'proxy' closes the circle"}
{"level":"error","message":"Route not Found"}
{"level":"error","message":"Internal Server Error"}
{"level":"error","message":"Internal Server Error"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"secretOrPrivateKey is not valid key material"}
{"level":"error","message":"secretOrPrivateKey is not valid key material"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"secretOrPrivateKey must be an asymmetric key when using RS256"}
{"level":"error","message":"\nInvalid `this.Employee.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:31:36\n\n  28 }\n  29 \n  30 async getByEmail(email: string) {\n→ 31     return await this.Employee.findUnique(\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`."}
{"level":"error","message":"\nInvalid `this.Employee.findUnique()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\employeeService.ts:31:36\n\n  28 }\n  29 \n  30 async getByEmail(email: string) {\n→ 31     return await this.Employee.findUnique(\nCan't reach database server at `localhost`:`3306`\n\nPlease make sure your database server is running at `localhost`:`3306`."}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Object'\n    --- property 'proxy' closes the circle"}
{"level":"error","message":"Converting circular structure to JSON\n    --> starting at object with constructor 'Object'\n    --- property 'proxy' closes the circle"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload, employee_id: number) {\n→ 10     return await this.Prospect.create({\n           data: {\n             name: 'Uzoefuna Ifeanyi',\n             email: 'ifeanyi@gmail.com',\n             phone_number: '08067920968',\n             address: '34 Ojodu Street Sangotedo',\n             employees: {\n               create: [\n                 {\n                   employee: {\n                     connect: {\n                       id: 5\n                     }\n                   }\n                 }\n               ]\n             }\n           },\n           include: {\n         ?   employees?: true,\n             include: {\n             ~~~~~~~\n               employee: true\n             },\n         ?   interactions?: true,\n         ?   _count?: true\n           }\n         })\n\n\nUnknown field `include` for include statement on model Prospect. Available options are listed in green. Did you mean `_count`?\n"}
{"level":"error","message":"\nInvalid `this.Prospect.create()` invocation in\nF:\\Users\\USER\\Documents\\projects\\nodejs\\crm\\services\\prospectService.ts:10:36\n\n   7 Prospect = prisma.prospect;\n   8 \n   9 async save(data: SaveProspectPayload, employee_id: number) {\n→ 10     return await this.Prospect.create({\n           data: {\n             name: 'Uzoefuna Ifeanyi',\n             email: 'ifeanyi@gmail.com',\n             phone_number: '08067920968',\n             address: '34 Ojodu Street Sangotedo',\n             employees: {\n               create: [\n                 {\n                   employee: {\n                     connect: {\n                       id: 5\n                     }\n                   }\n                 }\n               ]\n             }\n           },\n           include: {\n         ?   employees?: true,\n             include: {\n             ~~~~~~~\n               employee: true\n             },\n         ?   interactions?: true,\n         ?   _count?: true\n           }\n         })\n\n\nUnknown field `include` for include statement on model Prospect. Available options are listed in green. Did you mean `_count`?\n"}
